import { v4 as uuid } from 'uuid';
import { Stock } from './types';
import { UUID } from 'crypto';
import { getWatchedStocks, updateWatchlist } from '../db/utils';
import yahooFinance from 'yahoo-finance2';

export function buildStock(data: any): Stock {
  return {
    id: uuid() as UUID, // this would normally be generated by the db as a pk
    currentPrice: data.regularMarketPrice,
    symbol: data.symbol.toUpperCase(),
    displayName: data.displayName,
    // can also have db add a timestamp of last updated/checked/added etc.
  };
}

export async function pollWatchlistStocks() {
  const watchlist = getWatchedStocks();
  const promises = watchlist.map(async (stock: Stock) => {
    const data = await yahooFinance.quote(stock.symbol, {
      fields: ['symbol', 'displayName', 'regularMarketPrice'],
    });
    return buildStock(data);
  });

  const newList = await Promise.all(promises);
  updateWatchlist(newList);
}
