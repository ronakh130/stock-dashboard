import { MiddlewareFunction, Stock, StockAPIResponse } from '../types';
import yahooFinance from 'yahoo-finance2';

interface StockDataController {
  getAllStockData: MiddlewareFunction;
  getDataByStock: MiddlewareFunction;
}

export const stockDataController: StockDataController = {
  async getAllStockData(req, res, next) {
    const { stocks } = res.locals;
    try {
      stocks.forEach(async (stock: Stock) => {
        const res = await yahooFinance.quote(stock.symbol, {
          fields: ['symbol', 'displayName', 'regularMarketPrice'],
        });
        //update db with results
      });
    } catch (e) {
      return next(e);
    }
    return next();
  },
  async getDataByStock(req, res, next) {
    const { symbol } = req.params;
    const { watchlist } = res.locals;
    try {
      const data = await yahooFinance.quote(symbol, {
        fields: ['symbol', 'displayName', 'regularMarketPrice'],
      });

      if (!data) {
        return next({
          status: 404,
          log: 'Error in stockDataController.getDataByStock.',
          message: {
            err: 'No data found for stock: ' + symbol,
          },
        });
      }

      const stock: Stock = {
        id: watchlist[watchlist.length - 1].id + 1, // this would normally be generated by the db
        currentPrice: data.regularMarketPrice,
        symbol: data.symbol.toUpperCase(),
        displayName: data.displayName,
      };

      res.locals.stock = stock;
    } catch (e) {
      return next(e);
    }
    return next();
  },
};
